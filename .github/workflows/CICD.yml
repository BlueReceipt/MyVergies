name: CICD

on: [push]

jobs:
  test:
    runs-on: macOS-latest

    strategy:
      matrix:
        node-version: [8.x, 10.x]

    steps:
    - uses: actions/checkout@v1
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v1
      with:
        node-version: ${{ matrix.node-version }}
    - name: npm install, lint and test
      run: |
        npm install
        npm run lint
        npm test

  build:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [macOS-latest, windows-latest]

    steps:
    - uses: actions/checkout@v1
    - name: Use Node.js 10.x
      uses: actions/setup-node@v1
      with:
        node-version: 10.x
    - name: add macOS signing certificate
      if: contains(matrix.os, 'macOS') && startsWith(github.ref, 'refs/tags/')
      run: |
        security create-keychain -p ${{ secrets.CSC_KEY_PASSWORD }} buildagent.keychain
        security unlock-keychain -p ${{ secrets.CSC_KEY_PASSWORD }} buildagent.keychain
        security list-keychains -d user -s buildagent.keychain
        security default-keychain -s buildagent.keychain
        security import ./build/certs/DeveloperIDApplication.p12 -k buildagent.keychain -P ${{ secrets.CSC_KEY_PASSWORD }} -T /usr/bin/codesign
        security set-key-partition-list -S apple-tool:,apple: -s -k ${{ secrets.CSC_KEY_PASSWORD }} buildagent.keychain
    - name: npm install and build
      run: |
        npm install
        npm run build
      env:
        APPLE_ID: ${{ secrets.APPLE_ID }}
        APPLE_ID_PASS: ${{ secrets.APPLE_ID_PASS }}
        APPLE_ASC_PROVIDER: ${{ secrets.APPLE_ASC_PROVIDER }}
        NOTARIZE: startsWith(github.ref, 'refs/tags/')
    - name: Cleanup artifacts
      run: |
        npm run cleanDist
    - name: Upload artifacts
      uses: actions/upload-artifact@v1
      if: startsWith(github.ref, 'refs/tags/')
      with:
        name: ${{ matrix.os }}
        path: build
    - name: Release
      uses: softprops/action-gh-release@v1
      if: startsWith(github.ref, 'refs/tags/')
      with:
        files: "build/**"
        prerelease: true
